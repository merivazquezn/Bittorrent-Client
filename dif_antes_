diff --git a/src/download_manager/disk_saving.rs b/src/download_manager/disk_saving.rs
index 321b770..fba596e 100644
--- a/src/download_manager/disk_saving.rs
+++ b/src/download_manager/disk_saving.rs
@@ -73,10 +73,10 @@ pub fn join_all_pieces(
         .open(format!("{}/{}", downloads_dir_path, target_file_name))?;
 
     for piece_no in 0..piece_count {
-        info!(
-            "joining pieces of {}/pieces/{}",
-            downloads_dir_path, piece_no
-        );
+        // info!(
+        //     "joining pieces of {}/pieces/{}",
+        //     downloads_dir_path, piece_no
+        // );
         let mut piece_file: File = OpenOptions::new()
             .read(true)
             .open(format!("{}/pieces/{}", downloads_dir_path, piece_no))
diff --git a/src/piece_manager/worker/types.rs b/src/piece_manager/worker/types.rs
index 3b6ed23..41ec467 100644
--- a/src/piece_manager/worker/types.rs
+++ b/src/piece_manager/worker/types.rs
@@ -9,7 +9,7 @@ use std::sync::mpsc::Receiver;
 use std::sync::mpsc::RecvError;
 
 type PeerId = Vec<u8>;
-const FIRST_MIN_CONNECTIONS: usize = 20;
+const FIRST_MIN_CONNECTIONS: usize = 100;
 pub struct PieceManagerWorker {
     pub reciever: Receiver<PieceManagerMessage>,
     pub allowed_peers_to_download_piece: HashMap<u32, Vec<PeerId>>,
